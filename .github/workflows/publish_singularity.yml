name: Build and Push Singularity Prod

on:
  push:
    tags:
      - '*'  # Trigger this Action on any tag push

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update submodules recursively
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive

      - name: Prepare lowercase image name
        run: |
          # Example original image name: "Tethys_Portal_FIRO"
          # Convert to lowercase and replace underscores with dashes
          IMAGE_NAME=$(echo "Tethys_Portal_FIRO" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/g')
          
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Set up Go
        if: ${{ env.keepgoing == 'true' }}
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'
        id: go

      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            build-essential \
            libssl-dev \
            uuid-dev \
            libgpgme11-dev \
            squashfs-tools \
            libseccomp-dev \
            pkg-config \
            autoconf \
            automake \
            cryptsetup \
            fuse2fs \
            git \
            fuse \
            libfuse-dev \
            libtool \
            runc \
            squashfs-tools-ng \
            uidmap \
            wget \
            zlib1g-dev \
            libsubid-dev

      - name: Install Singularity
        env:
          SINGULARITY_VERSION: 4.3.0
          GOPATH: /tmp/go
        run: |
          mkdir -p $GOPATH
          sudo mkdir -p /usr/local/var/singularity/mnt
          mkdir -p $GOPATH/src/github.com/sylabs
          cd $GOPATH/src/github.com/sylabs
          wget -qO- https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-ce-${SINGULARITY_VERSION}.tar.gz | tar xzv
          cd singularity-ce-${SINGULARITY_VERSION}
          ./mconfig -p /usr/local
          make -C builddir
          sudo make -C builddir install


      - name: Build Singularity Image
        run: |
          sudo -E singularity build singularity-firo-tethys-portal.sif firo_portal.def

      - name: Login and Deploy Container to Github Regsitry
        run: |         
          echo "${{ secrets.GITHUB_TOKEN }}" | singularity registry login -u "${{ secrets.GHCR_USERNAME }}" --password-stdin oras://ghcr.io
          singularity push singularity-firo-tethys-portal.sif oras://ghcr.io/$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]'):${{ github.ref_name }}-x86

      - name: Logout from Github Container Registry
        run: |
           singularity remote logout

      - name: Import and Verify Singularity key
        env:
          KEY_B64: ${{ secrets.SIGNING_KEY }}
          KEY_PASS: ${{ secrets.KEY_PASSPHRASE }}
        run: |
          # Decode key and verify format
          echo "$KEY_B64" | base64 -d > private.asc
          echo "=== Key File Header ==="
          head -n 1 private.asc  # Should show "-----BEGIN PGP PRIVATE KEY BLOCK-----"
          
          # Import key with passphrase validation
          echo "=== Key Import ==="
          echo "$KEY_PASS" | singularity key import private.asc 2>&1 | tee import.log
          
          # Verify successful import
          echo "=== Imported Keys ==="
          singularity key list
          

      - name: Sign the image
        run: |
          echo "${{ secrets.KEY_PASSPHRASE }}" | singularity sign --keyidx 0 singularity-firo-tethys-portal.sif

      - name: Login and Push Singularity Image
        env:
          SYLABS_AUTH_TOKEN: ${{ secrets.SYLABS_AUTH_TOKEN }}
          SYLABS_REPO: ${{ secrets.SYLABS_REPO }}
        run: |
           TOKEN_FILE=$(mktemp)
           echo "$SYLABS_AUTH_TOKEN" > "$TOKEN_FILE"
           
           REPO_NAME=$(basename "$GITHUB_REPOSITORY")
          
            # Attempt to login
            if singularity remote login --tokenfile "$TOKEN_FILE"; then
              echo "Login successful"
                echo "Searching for existing image: library://$SYLABS_REPO/${REPO_NAME}:${{ github.ref_name }}-x86"
                if singularity search ${REPO_NAME} | grep -q '${{ github.ref_name }}-x86'; then
                  echo "Image found in library, deleting it first..."
                  singularity delete --force library://$SYLABS_REPO/${REPO_NAME}:${{ github.ref_name }}-x86
                else
                  echo "Image does not exist, skipping delete step."
                fi

              singularity push container.sif library://$SYLABS_REPO/${REPO_NAME}:${{ github.ref_name }}-x86    
            else
              echo "Login failed"
              exit 1
            fi

            # Clean up
            rm "$TOKEN_FILE"

